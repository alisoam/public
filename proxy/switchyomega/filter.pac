function FindProxyForURL(url, host, scheme) {
    "use strict";
    let patterns  = [
        /^1\.1\.1\.1$/,
        /^(.*\.)?googlesyndication(\.com)$/,
        /^(.*\.)?googlevideo(\.com)$/,
        /^(.*\.)?dl\.google(\.com)$/,
        /^(.*\.)?account\.google(\.com)$/,
        /^(.*\.)?cloud\.google(\.com)$/,
        /^(.*\.)?clients6\.google(\.com)$/,
        /^(.*\.)?notebooklm.google(\.com)?$/,
        /^(.*\.)?gemini.google(\.com)?$/,
        /^(.*\.)?twitter\.com$/,
        /^(.*\.)?t\.co$/,
        /^(.*\.)?twimg\.com$/,
        /^(.*\.)?x\.com$/,
        /^(.*\.)?youtube\.com$/,
        /^(.*\.)?youtu\.be$/,
        /^(.*\.)?ytimg\.com$/,
        /^(.*\.)?telegram\.org$/,
        /^(.*\.)?t\.me$/,
        /^(.*\.)?facebook\.com$/,
        /^(.*\.)?fbcdn\.net$/,
        /^(.*\.)?instagram\.com$/,
        /^(.*\.)?cdninstagram\.com$/,
        /^(.*\.)?whatsapp\.(com|net)$/,
        /^(.*\.)?developer\.android\.com$/,
        /^(.*\.)?wordpress\.com$/,
        /^(.*\.)?wp\.com$/,
        /^(.*\.)?gitlab\.(com|io)$/,
        /^(.*\.)?quora\.com$/,
        /^(.*\.)?disqus\.com$/,
        /^(.*\.)?myanimelist\.net$/,
        /^(.*\.)?zoho\.(com|in|au|eu|jp)$/,
        /^(.*\.)?zohowebstatic\.com/,
        /^(.*\.)?.zohopublic\.com/,
        /^(.*\.)?zohocdn\.com/,
        /^(.*\.)?docker\.com$/,
        /^(.*\.)?dockerstatic\.com$/,
        /^(.*\.)?jadi\.net$/,
        /^(.*\.)?autodesk\.com$/,
        /^(.*\.)?digikey\.com$/,
        /^(.*\.)?mbed\.com$/,
        /^(.*\.)?microchip\.com$/,
        /^(.*\.)?aiofilm\.([^\.]+)$/,
        /^(.*\.)?v2fly\.org$/,
        /^(.*\.)?overleaf\.com$/,
        /^(.*\.)?anilist\.co$/,
        /^(.*\.)?openai\.com$/,
        /^(.*\.)?chatgpt\.com$/,
        /^(.*\.)?statsigapi\.net$/,
        /^(.*\.)?oaistatic\.com/,
        /^(.*\.)?bbc\.com$/,
        /^(.*\.)?bbc\.co\.uk$/,
        /^(.*\.)?bonbast.com$/,
        /^(.*\.)?bon-bast.com$/,
        /^(.*\.)?navasan\.net/,
        /^(.*\.)?reddit\.com$/,
        /^(.*\.)?redd\.it$/,
        /^(.*\.)?threads\.net$/,
        /^(.*\.)?grafana\.com$/,
        /^(.*\.)?spotify\.com$/,
        /^(.*\.)?spotifycdn\.com$/,
        /^(.*\.)?fandom(\.com)?$/,
        /^(.*\.)?telegraph\.co\.uk/,
    ];

    for (const pattern of patterns)
        if (pattern.test(host))
            return "+FILTER";

    return "+DEFAULT";
}
